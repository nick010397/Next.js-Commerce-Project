import Button2 from '@components/Button'
import { css } from '@emotion/react'
import Head from 'next/head'
import { useEffect, useRef, useState } from 'react'

export default function Home() {
  // const [products, setProducts] = useState<
  //   { id: string; properties: { id: string }[] }[]
  // >([])

  // useEffect(() => {
  //   fetch('/api/get-items')
  //     .then((res) => res.json())
  //     .then((data) => setProducts(data.items))
  // }, [])
  const [products, setProducts] = useState<{ id: string; name: string }[]>([])

  useEffect(() => {
    fetch('/api/get-products')
      .then((res) => res.json())
      .then((data) => setProducts(data.items))
  }, [])

  const inputRef = useRef<HTMLInputElement>(null)
  const handleClick = () => {
    if (inputRef.current == null || inputRef.current.value === '') {
      alert('name을 넣어주세요.')
      return
    }
    fetch(`/api/add-item?name=${inputRef.current.value}`)
      .then((res) => res.json())
      .then((data) => alert(data.message))
  }
  return (
    <div style={{ textAlign: 'center', margin: 0, padding: 0 }}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <div>
          <input
            className="placeholder:italic placeholder:text-pink-400 block bg-white w-96 border border-slate-300 rounded-md py-2 pl-9 pr-3 shadow-sm focus:outline-none focus:border-pink-500 focus:ring-pink-500 focus:ring-1 sm:text-sm"
            ref={inputRef}
            type="text"
            placeholder="name"
          ></input>
          <button
            css={css`
              background-color: hotpink;
              padding: 16px;
              border-radius: 8px;
            `}
            onClick={handleClick}
          >
            Add Jacket
          </button>
          <Button2>Jacket</Button2>
          <div>
            <p>Product List</p>
            <div>
              {products &&
                products.map((item) => <div key={item.id}>{item.name}</div>)}
            </div>

            {/* {products &&
              products.map((item) => (
                <div key={item.id}>
                  {JSON.stringify(item)}{' '}
                  {item.properties &&
                    Object.entries(item.properties).map(([key, value]) => (
                      <button
                        key={key}
                        onClick={() => {
                          fetch(
                            `/api/get-detail?pageId=${item.id}&propertyId=${value.id}`
                          )
                            .then((res) => res.json())
                            .then((data) => alert(JSON.stringify(data.detail)))
                        }}
                      >
                        {key}
                      </button>
                    ))}
                </div>
              ))} */}
          </div>
        </div>
      </main>
    </div>
  )
}
